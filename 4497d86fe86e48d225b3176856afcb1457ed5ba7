{
  "comments": [
    {
      "key": {
        "uuid": "5771724c_bcd2b572",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 14,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-08-10T12:50:54Z",
      "side": 1,
      "message": "- I wonder why we need file based locking? because you have entry object for respective dump type and that contain \"Status\" property right, so why we cannot query that?\n\n- Do we can keep only one hostboot and hardware dump for every boot? is it true? OR What you mean by \"another usable dump cannot be collected until next host reboot\" Can please elaborate the case which you are trying solve?",
      "range": {
        "startLine": 12,
        "startChar": 34,
        "endLine": 14,
        "endChar": 28
      },
      "revId": "4497d86fe86e48d225b3176856afcb1457ed5ba7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6dc574d3_6ec74d57",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 14,
      "author": {
        "id": 1000086
      },
      "writtenOn": "2021-08-12T05:01:31Z",
      "side": 1,
      "message": "Status property is going to tell the status of the specific dump. The requirement is to avoid multiple hostboot in same boot flow because same set of data we are going to see.  File based mechanism simplify the design to know any dump is in progress or completed in the specific boot path.",
      "parentUuid": "5771724c_bcd2b572",
      "range": {
        "startLine": 12,
        "startChar": 34,
        "endLine": 14,
        "endChar": 28
      },
      "revId": "4497d86fe86e48d225b3176856afcb1457ed5ba7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6ea7471e_fc9a9b88",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 14,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-08-12T05:15:55Z",
      "side": 1,
      "message": "\u003e The requirement is to avoid multiple hostboot in same boot flow because same set of data we are going to see. \n\nWhat you mean by \"multiple hostboot\"?\nIs it multiple Hostboot instance going to run?\nOR\nIs it multiple Hostboot dump will possible to trigger and we are trying to avoid that?",
      "parentUuid": "6dc574d3_6ec74d57",
      "range": {
        "startLine": 12,
        "startChar": 34,
        "endLine": 14,
        "endChar": 28
      },
      "revId": "4497d86fe86e48d225b3176856afcb1457ed5ba7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "292012c2_766e08b8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 14,
      "author": {
        "id": 1000086
      },
      "writtenOn": "2021-08-12T05:18:39Z",
      "side": 1,
      "message": "Multiple hostbootdump",
      "parentUuid": "6ea7471e_fc9a9b88",
      "range": {
        "startLine": 12,
        "startChar": 34,
        "endLine": 14,
        "endChar": 28
      },
      "revId": "4497d86fe86e48d225b3176856afcb1457ed5ba7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6be56191_cb9bb29d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 14,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-08-12T05:22:16Z",
      "side": 1,
      "message": "So, If you are trying to avoid to create more than one hostboot dump in same ipl?",
      "parentUuid": "292012c2_766e08b8",
      "range": {
        "startLine": 12,
        "startChar": 34,
        "endLine": 14,
        "endChar": 28
      },
      "revId": "4497d86fe86e48d225b3176856afcb1457ed5ba7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2024f2a0_23b5eb38",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 14,
      "author": {
        "id": 1000086
      },
      "writtenOn": "2021-08-12T05:25:25Z",
      "side": 1,
      "message": "yes.\n\"ipl\"  is ibm specific term , that is why used \"boot\" here .",
      "parentUuid": "6be56191_cb9bb29d",
      "range": {
        "startLine": 12,
        "startChar": 34,
        "endLine": 14,
        "endChar": 28
      },
      "revId": "4497d86fe86e48d225b3176856afcb1457ed5ba7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6fdda3db_7198af02",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 14,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-08-12T05:36:28Z",
      "side": 1,
      "message": "Ok\n\n\u003e If you are trying to avoid to create more than one hostboot dump in same boot?\n\u003e Yes\n- are you deleting existing hostboot dump entry? \n\n- When you say \"File based mechanism simplify the design to know any dump is in progress\" - What it will simplify? I did not get that point (commit message did not mention that)\n\n- Why not use the existing hostboot dump entry that contain Status and Offload properties?",
      "parentUuid": "2024f2a0_23b5eb38",
      "range": {
        "startLine": 12,
        "startChar": 34,
        "endLine": 14,
        "endChar": 28
      },
      "revId": "4497d86fe86e48d225b3176856afcb1457ed5ba7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c722dfae_e482b50c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 14,
      "author": {
        "id": 1000086
      },
      "writtenOn": "2021-08-12T06:08:12Z",
      "side": 1,
      "message": "Why not use the existing hostboot dump entry that contain Status and Offload properties?  please provide details , to handle this requirement using offload properties.",
      "parentUuid": "6fdda3db_7198af02",
      "range": {
        "startLine": 12,
        "startChar": 34,
        "endLine": 14,
        "endChar": 28
      },
      "revId": "4497d86fe86e48d225b3176856afcb1457ed5ba7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4d03bb8f_62bbd749",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 14,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-08-12T06:34:29Z",
      "side": 1,
      "message": "\u003e please provide details , to handle this requirement using offload properties.\n\nI guess, I am suggesting Status and Offload properties instead of the file based lock and Not getting a reason why cannot use that. \n\nI am not the author for this patch and I don\u0027t know the requirement, I got the request to review this patch and asking questions and suggesting other option which I am thinking so, If you seeing difficulty in that suggestion please give the details on that option. \n\nWhat I understood (correct me If I am wrong) from this patch and conversion with this thread is,\n- Creating a file for first hostboot dump request and collecting dump and creating dump dbus entry.\n- Not allowing the second hostboot dump request if the file is present\n\nFrom 1st point the dump entry is created and that contains Status property (https://github.com/openbmc/phosphor-dbus-interfaces/blob/master/yaml/xyz/openbmc_project/Common/Progress.interface.yaml#L10), it will tell the status of dump so my question is why not use that property instead of file (which is created by this patch)?\n\nPlease describe your requirement which you are trying to solve with this patch OR correct me if my understanding is wrong.",
      "parentUuid": "c722dfae_e482b50c",
      "range": {
        "startLine": 12,
        "startChar": 34,
        "endLine": 14,
        "endChar": 28
      },
      "revId": "4497d86fe86e48d225b3176856afcb1457ed5ba7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dc83f6df_8981e113",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 14,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2021-08-12T06:37:01Z",
      "side": 1,
      "message": "There can be older dumps from earlier boots which is not yet downloaded so we cannot delete earlier dump entries when generating new dump in this boot.. there may not be a good mechanism to know whether the entry is from this boot earlier boot.",
      "parentUuid": "c722dfae_e482b50c",
      "range": {
        "startLine": 12,
        "startChar": 34,
        "endLine": 14,
        "endChar": 28
      },
      "revId": "4497d86fe86e48d225b3176856afcb1457ed5ba7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "83d5b4fa_cddb55e7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 14,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-08-12T07:03:33Z",
      "side": 1,
      "message": "\u003e are you deleting existing hostboot dump entry?\n\nOk I got a answer for above message.\n\n\u003e there may not be a good mechanism to know whether the entry is from this boot earlier boot.\n\nOk, Looks we are trying fix this by using the file which you are created, right?  If so, please mention that in commit message.\n\nand One more question\nSecond hostboot dump request can happen for different reason in the same boot window right? No?\nI am just checking to see if Hostboot or Hardware dump collection adding some traces and that may vary for different dump request in the same boot window.",
      "parentUuid": "dc83f6df_8981e113",
      "range": {
        "startLine": 12,
        "startChar": 34,
        "endLine": 14,
        "endChar": 28
      },
      "revId": "4497d86fe86e48d225b3176856afcb1457ed5ba7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eceaa66c_3f4803a4",
        "filename": "dump/clear_op_dump_lock.service",
        "patchSetId": 9
      },
      "lineNbr": 2,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-08-10T12:50:54Z",
      "side": 1,
      "message": "extra space",
      "range": {
        "startLine": 2,
        "startChar": 38,
        "endLine": 2,
        "endChar": 39
      },
      "revId": "4497d86fe86e48d225b3176856afcb1457ed5ba7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "91efb9d9_bf5d1ded",
        "filename": "dump/clear_op_dump_lock.service",
        "patchSetId": 9
      },
      "lineNbr": 4,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-08-10T12:50:54Z",
      "side": 1,
      "message": "Before? I like to see Andrew comment on this.",
      "range": {
        "startLine": 3,
        "startChar": 0,
        "endLine": 4,
        "endChar": 26
      },
      "revId": "4497d86fe86e48d225b3176856afcb1457ed5ba7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c806bf50_7bb44ccd",
        "filename": "dump/clear_op_dump_lock.service",
        "patchSetId": 9
      },
      "lineNbr": 7,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-08-10T12:50:54Z",
      "side": 1,
      "message": "Do we really need for this service? Looks intention is just remove existing lock file before every host boot right?",
      "range": {
        "startLine": 5,
        "startChar": 0,
        "endLine": 7,
        "endChar": 55
      },
      "revId": "4497d86fe86e48d225b3176856afcb1457ed5ba7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6ad08e68_972a3fd0",
        "filename": "dump/clear_op_dump_lock.service",
        "patchSetId": 9
      },
      "lineNbr": 8,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-08-10T12:50:54Z",
      "side": 1,
      "message": "When you need to run this service? Looks you need to run before every host boot right? If so, I am not sure whether you can use `Conflicts` with `obmc-host-stop`",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 8,
        "endChar": 33
      },
      "revId": "4497d86fe86e48d225b3176856afcb1457ed5ba7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "76c5a128_402fc289",
        "filename": "dump/clear_op_dump_lock.service",
        "patchSetId": 9
      },
      "lineNbr": 13,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-08-10T12:50:54Z",
      "side": 1,
      "message": "is it required?",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 13,
        "endChar": 19
      },
      "revId": "4497d86fe86e48d225b3176856afcb1457ed5ba7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2dbcb70f_8fa10bd8",
        "filename": "dump/dump_manager.cpp",
        "patchSetId": 9
      },
      "lineNbr": 659,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-08-10T12:50:54Z",
      "side": 1,
      "message": "Do you need to make sure whether the given file parent directory is created or not.\nIf not, Do you need to throw error or create the parent directory path?",
      "range": {
        "startLine": 659,
        "startChar": 22,
        "endLine": 659,
        "endChar": 39
      },
      "revId": "4497d86fe86e48d225b3176856afcb1457ed5ba7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eeccd1c8_f332ec98",
        "filename": "dump/dump_manager.hpp",
        "patchSetId": 9
      },
      "lineNbr": 139,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-08-10T12:50:54Z",
      "side": 1,
      "message": "Looks you are creating lock file if it is not there and returning false so, please add that info also here?",
      "range": {
        "startLine": 138,
        "startChar": 15,
        "endLine": 139,
        "endChar": 50
      },
      "revId": "4497d86fe86e48d225b3176856afcb1457ed5ba7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5d6adb14_61bd32f2",
        "filename": "dump/dump_manager.hpp",
        "patchSetId": 9
      },
      "lineNbr": 141,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-08-10T12:50:54Z",
      "side": 1,
      "message": "Looks you are throwing exception so please add that info as well.",
      "range": {
        "startLine": 141,
        "startChar": 9,
        "endLine": 141,
        "endChar": 15
      },
      "revId": "4497d86fe86e48d225b3176856afcb1457ed5ba7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3cbc5b50_d4e27880",
        "filename": "dump/meson.build",
        "patchSetId": 9
      },
      "lineNbr": 6,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-08-10T12:50:54Z",
      "side": 1,
      "message": "whitespace",
      "range": {
        "startLine": 6,
        "startChar": 48,
        "endLine": 6,
        "endChar": 49
      },
      "revId": "4497d86fe86e48d225b3176856afcb1457ed5ba7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}