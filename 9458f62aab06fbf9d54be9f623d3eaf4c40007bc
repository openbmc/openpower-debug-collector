{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "cebcc6fc_a815e049",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1001591
      },
      "writtenOn": "2023-01-02T14:01:45Z",
      "side": 1,
      "message": "Some suggestions and observations",
      "revId": "9458f62aab06fbf9d54be9f623d3eaf4c40007bc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "504c0523_d88bd8a2",
        "filename": "dump/dump_collect.cpp",
        "patchSetId": 12
      },
      "lineNbr": 46,
      "author": {
        "id": 1001591
      },
      "writtenOn": "2023-01-02T14:01:45Z",
      "side": 1,
      "message": "struct pdbg_target* target \u003d nullptr; better to use an unique pointer",
      "revId": "9458f62aab06fbf9d54be9f623d3eaf4c40007bc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b72dc4da_9887febd",
        "filename": "dump/dump_collect.cpp",
        "patchSetId": 12
      },
      "lineNbr": 46,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2023-01-03T06:18:03Z",
      "side": 1,
      "message": "adding initialization but keeping the pointer in the current way",
      "parentUuid": "504c0523_d88bd8a2",
      "revId": "9458f62aab06fbf9d54be9f623d3eaf4c40007bc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ed44c6d4_aa5fe9ad",
        "filename": "dump/dump_collect.cpp",
        "patchSetId": 12
      },
      "lineNbr": 46,
      "author": {
        "id": 1001591
      },
      "writtenOn": "2023-01-03T13:16:17Z",
      "side": 1,
      "message": "Just curious to know why using a raw pointer? Is there any boundary in the following code to use a smart pointer?",
      "parentUuid": "b72dc4da_9887febd",
      "revId": "9458f62aab06fbf9d54be9f623d3eaf4c40007bc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3a4e7da6_a91451d9",
        "filename": "dump/dump_collect.cpp",
        "patchSetId": 12
      },
      "lineNbr": 46,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2023-01-03T13:56:47Z",
      "side": 1,
      "message": "We need to use smart pointers when the memory is allocated in the local scop right? here we get a pointer to an existing global stack, so allocation and deallocation are not the responsibility of this function.",
      "parentUuid": "ed44c6d4_aa5fe9ad",
      "revId": "9458f62aab06fbf9d54be9f623d3eaf4c40007bc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5eeef589_f4214e54",
        "filename": "dump/dump_collect.cpp",
        "patchSetId": 12
      },
      "lineNbr": 47,
      "author": {
        "id": 1001591
      },
      "writtenOn": "2023-01-02T14:01:45Z",
      "side": 1,
      "message": "either use auto failed \u003d false; or bool failed;",
      "revId": "9458f62aab06fbf9d54be9f623d3eaf4c40007bc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a6242a0f_cd8c0c87",
        "filename": "dump/dump_collect.cpp",
        "patchSetId": 12
      },
      "lineNbr": 47,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2023-01-03T06:18:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5eeef589_f4214e54",
      "revId": "9458f62aab06fbf9d54be9f623d3eaf4c40007bc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "09ab1b8b_27451f01",
        "filename": "dump/dump_collect.cpp",
        "patchSetId": 12
      },
      "lineNbr": 53,
      "author": {
        "id": 1001591
      },
      "writtenOn": "2023-01-02T14:01:45Z",
      "side": 1,
      "message": "Better to use std::vector\u003cpid_t\u003e pidList(1); as it is going to have only one element",
      "revId": "9458f62aab06fbf9d54be9f623d3eaf4c40007bc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d05e44c5_b6800810",
        "filename": "dump/dump_collect.cpp",
        "patchSetId": 12
      },
      "lineNbr": 53,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2023-01-03T06:18:03Z",
      "side": 1,
      "message": "This will have more than one element",
      "parentUuid": "09ab1b8b_27451f01",
      "revId": "9458f62aab06fbf9d54be9f623d3eaf4c40007bc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c6d8d689_dc85cbd9",
        "filename": "dump/dump_collect.cpp",
        "patchSetId": 12
      },
      "lineNbr": 103,
      "author": {
        "id": 1001591
      },
      "writtenOn": "2023-01-02T14:01:45Z",
      "side": 1,
      "message": "auto status \u003d 0;",
      "revId": "9458f62aab06fbf9d54be9f623d3eaf4c40007bc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "28e3808f_ab0afc61",
        "filename": "dump/dump_collect.cpp",
        "patchSetId": 12
      },
      "lineNbr": 103,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2023-01-03T06:18:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c6d8d689_dc85cbd9",
      "revId": "9458f62aab06fbf9d54be9f623d3eaf4c40007bc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}