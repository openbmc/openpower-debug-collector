{
  "comments": [
    {
      "key": {
        "uuid": "f8dc584e_5f09d8dd",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2021-06-24T21:40:06Z",
      "side": 1,
      "message": "If you click the \"...\" on the main gerrit page you can set a review as WIP. But I think at this point, you\u0027re ready for a real review so you can just remove this.",
      "range": {
        "startLine": 7,
        "startChar": 55,
        "endLine": 7,
        "endChar": 58
      },
      "revId": "b2e04f96349ea44b3985f23e6ea63a089fe231eb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "35a51d5a_9e379f49",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2021-06-24T21:40:06Z",
      "side": 1,
      "message": "two words",
      "range": {
        "startLine": 7,
        "startChar": 46,
        "endLine": 7,
        "endChar": 54
      },
      "revId": "b2e04f96349ea44b3985f23e6ea63a089fe231eb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "58f72056_560f1394",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2021-06-24T21:40:06Z",
      "side": 1,
      "message": "nit: these are sub-bullets of the first line (i.e. one test where you verified two things)\nDid you verify system went to quiesce state after the dump was collected?\nWhat about  some error paths? What if host is not running or hostboot dump interface returns error.",
      "revId": "b2e04f96349ea44b3985f23e6ea63a089fe231eb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1f267045_a86acfc1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2021-06-24T21:40:06Z",
      "side": 1,
      "message": "Lets get your automake commit merged to fix this.",
      "revId": "b2e04f96349ea44b3985f23e6ea63a089fe231eb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5ae0fd32_c99fb5ce",
        "filename": "watchdog/watchdog_common.cpp",
        "patchSetId": 2
      },
      "lineNbr": 56,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2021-06-24T21:40:06Z",
      "side": 1,
      "message": "I don\u0027t think we\u0027ve got a lot of need for the more enhanced logging that PRD team uses. Lets just use the normal logging API. Something like this:\nlog\u003clevel::ERR\u003e(\"Error in AutoReboot Get\", entry(\"ERROR\u003d%s\", e.what()));",
      "revId": "b2e04f96349ea44b3985f23e6ea63a089fe231eb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8ad5f3ef_ead9ae57",
        "filename": "watchdog/watchdog_common.hpp",
        "patchSetId": 2
      },
      "lineNbr": 13,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2021-06-24T21:40:06Z",
      "side": 1,
      "message": "Put a separator, like @param target - the target..., to separate the input param name and it\u0027s description.",
      "range": {
        "startLine": 13,
        "startChar": 10,
        "endLine": 13,
        "endChar": 20
      },
      "revId": "b2e04f96349ea44b3985f23e6ea63a089fe231eb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0175ff34_8a2b48fb",
        "filename": "watchdog/watchdog_dbus.cpp",
        "patchSetId": 2
      },
      "lineNbr": 73,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2021-06-24T21:40:06Z",
      "side": 1,
      "message": "General comment made previously on the trace wrapper.",
      "revId": "b2e04f96349ea44b3985f23e6ea63a089fe231eb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e8cd6900_75bfbd86",
        "filename": "watchdog/watchdog_dbus.cpp",
        "patchSetId": 2
      },
      "lineNbr": 142,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2021-06-24T21:40:06Z",
      "side": 1,
      "message": "This is more complex then I think you really need. Just call this:\nbusctl get-property xyz.openbmc_project.State.Host /xyz/openbmc_project/state/host0 xyz.openbmc_project.State.Host CurrentHostState\n\nIf it comes back as \"xyz.openbmc_project.State.Host.HostState.Running\" then request the dump.",
      "revId": "b2e04f96349ea44b3985f23e6ea63a089fe231eb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4e6e999f_c6ccac3d",
        "filename": "watchdog/watchdog_handler.cpp",
        "patchSetId": 2
      },
      "lineNbr": 66,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2021-06-24T21:40:06Z",
      "side": 1,
      "message": "I wonder if we should also have a timeout object going that sets inProgress to false if it expires? We need to ensure we don\u0027t get stuck hanging forever if something happens on the dump side.",
      "revId": "b2e04f96349ea44b3985f23e6ea63a089fe231eb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "67e0d3bf_8d2e6c80",
        "filename": "watchdog/watchdog_handler.hpp",
        "patchSetId": 2
      },
      "lineNbr": 16,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2021-06-24T21:40:06Z",
      "side": 1,
      "message": "@brief missing",
      "revId": "b2e04f96349ea44b3985f23e6ea63a089fe231eb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fbc39082_7f968aba",
        "filename": "watchdog/watchdog_logging.hpp",
        "patchSetId": 2
      },
      "lineNbr": 27,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2021-06-24T21:40:06Z",
      "side": 1,
      "message": "See previous comments. This is a pretty simple application, I don\u0027t think it really needs an extra layer of logging over the normal phosphor-logging API\u0027s.",
      "revId": "b2e04f96349ea44b3985f23e6ea63a089fe231eb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aa3750e1_fa8fa92b",
        "filename": "watchdog/watchdog_main.cpp",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2021-06-24T21:40:06Z",
      "side": 1,
      "message": "I think eventually this logic will be handled by the dump code but for now I think this is good for lab debug.",
      "revId": "b2e04f96349ea44b3985f23e6ea63a089fe231eb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "322d4e9d_6377ed4a",
        "filename": "watchdog_timeout.cpp",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2021-06-24T21:40:06Z",
      "side": 1,
      "message": "I think this is redundant now? Doesn\u0027t your new code generate and report the error?",
      "revId": "b2e04f96349ea44b3985f23e6ea63a089fe231eb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}