{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "eaf7ba6e_e7d00d45",
        "filename": "dump/dump_manager.cpp",
        "patchSetId": 3
      },
      "lineNbr": 19,
      "author": {
        "id": 1000089
      },
      "writtenOn": "2022-01-12T10:55:00Z",
      "side": 1,
      "message": "why 20?",
      "range": {
        "startLine": 19,
        "startChar": 34,
        "endLine": 19,
        "endChar": 38
      },
      "revId": "c689f2ed0392b44d3b524f077e14211990400581",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bb9686f7_c6d4d2a4",
        "filename": "dump/dump_manager.cpp",
        "patchSetId": 3
      },
      "lineNbr": 19,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2022-01-12T12:33:08Z",
      "side": 1,
      "message": "maximum possible processors, adding a comment",
      "parentUuid": "eaf7ba6e_e7d00d45",
      "range": {
        "startLine": 19,
        "startChar": 34,
        "endLine": 19,
        "endChar": 38
      },
      "revId": "c689f2ed0392b44d3b524f077e14211990400581",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e1e28ebd_965911ae",
        "filename": "dump/dump_manager.cpp",
        "patchSetId": 3
      },
      "lineNbr": 49,
      "author": {
        "id": 1000089
      },
      "writtenOn": "2022-01-12T10:55:00Z",
      "side": 1,
      "message": "we should check if the value exists in the dumpTypeMap and read rather than relieing on the exception thrown and catching at line 51.",
      "revId": "c689f2ed0392b44d3b524f077e14211990400581",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b6dfdae6_8966690e",
        "filename": "dump/dump_manager.cpp",
        "patchSetId": 3
      },
      "lineNbr": 49,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2022-01-12T12:33:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e1e28ebd_965911ae",
      "revId": "c689f2ed0392b44d3b524f077e14211990400581",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "37c03cbb_006db440",
        "filename": "dump/dump_manager.cpp",
        "patchSetId": 3
      },
      "lineNbr": 74,
      "author": {
        "id": 1000089
      },
      "writtenOn": "2022-01-12T10:55:00Z",
      "side": 1,
      "message": "std::holds_alternative\u003cuint64_t\u003e(iter-\u003esecond)\n\nwe could use this to check if alternative exists rather than relying on the exception. suggestion, but i am ok too. but thre are too many try..catch probably we should minimize them, you will not find that many in other code",
      "revId": "c689f2ed0392b44d3b524f077e14211990400581",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f87e9b02_2cbe305a",
        "filename": "dump/dump_manager.cpp",
        "patchSetId": 3
      },
      "lineNbr": 74,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2022-01-12T12:33:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "37c03cbb_006db440",
      "revId": "c689f2ed0392b44d3b524f077e14211990400581",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d94bf1be_e6f51d86",
        "filename": "dump/dump_manager.cpp",
        "patchSetId": 3
      },
      "lineNbr": 86,
      "author": {
        "id": 1000089
      },
      "writtenOn": "2022-01-12T10:55:00Z",
      "side": 1,
      "message": "even with invalid eid we will continue to the next line at 88 as we are using report which will create and commit the error",
      "revId": "c689f2ed0392b44d3b524f077e14211990400581",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2f817e11_e97c07b2",
        "filename": "dump/dump_manager.cpp",
        "patchSetId": 3
      },
      "lineNbr": 86,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2022-01-12T12:33:08Z",
      "side": 1,
      "message": "Yes we need to continue even if the EID is invalid",
      "parentUuid": "d94bf1be_e6f51d86",
      "revId": "c689f2ed0392b44d3b524f077e14211990400581",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b5e01911_7c2fe2b8",
        "filename": "dump/dump_manager.cpp",
        "patchSetId": 3
      },
      "lineNbr": 96,
      "author": {
        "id": 1000089
      },
      "writtenOn": "2022-01-12T10:55:00Z",
      "side": 1,
      "message": "same here coe will continue",
      "revId": "c689f2ed0392b44d3b524f077e14211990400581",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bd0e2010_1080000e",
        "filename": "dump/dump_manager.cpp",
        "patchSetId": 3
      },
      "lineNbr": 96,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2022-01-12T12:33:08Z",
      "side": 1,
      "message": "yes",
      "parentUuid": "b5e01911_7c2fe2b8",
      "revId": "c689f2ed0392b44d3b524f077e14211990400581",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}